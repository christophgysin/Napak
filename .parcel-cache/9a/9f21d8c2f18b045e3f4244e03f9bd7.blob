var $a0006f78bf10c69f$exports = {};
$parcel$require("2796602326226115a0006f78bf10c69f", "/js/shared/helpers.js");
$parcel$require("2796602326226115a0006f78bf10c69f", "/js/shared/uuid.js");
$parcel$require("2796602326226115a0006f78bf10c69f", "/js/components/wheel.js");
$parcel$require("2796602326226115a0006f78bf10c69f", "/js/components/picker.js");
$parcel$require("2796602326226115a0006f78bf10c69f", "/js/shared/globals.js");
$parcel$require("2796602326226115a0006f78bf10c69f", "/js/shared/user.js");
$parcel$require("2796602326226115a0006f78bf10c69f", "/js/shared/store.js");

class $a0006f78bf10c69f$export$default {
  constructor() {
    let gradePicker = new $a0006f78bf10c69f$import$wheel();
    let ascentTypeSelector = new $a0006f78bf10c69f$import$picker({
      cssClass: 'horizontal-menu full-width',
      id: 'ascent-type-selector',
      targetObj: 'currentAscentType',
      options: [{
        title: 'Redpoint',
        value: 'redpoint',
        selected: true,
        legend: $a0006f78bf10c69f$import$globals.totalAscents.redpoint,
        val: 'totalAscents.redpoint'
      }, {
        title: 'Flash',
        value: 'flash',
        legend: $a0006f78bf10c69f$import$globals.totalAscents.flash,
        val: 'totalAscents.flash'
      }, {
        title: 'Onsight',
        value: 'onsight',
        legend: $a0006f78bf10c69f$import$globals.totalAscents.onsight,
        val: 'totalAscents.onsight'
      }]
    });
    let container = $a0006f78bf10c69f$import$dce({
      el: 'SECTION',
      cssClass: 'grade bgr-gradient'
    });
    let pickerElement = $a0006f78bf10c69f$import$dce({
      el: 'DIV',
      cssClass: 'grade-selector'
    });
    pickerElement.appendChild(gradePicker.render());
    pickerElement.appendChild(ascentTypeSelector.render());
    let buttonsContainer = $a0006f78bf10c69f$import$dce({
      el: 'DIV',
      cssClass: 'tick-buttons-container'
    });
    let buttonDec = $a0006f78bf10c69f$import$dce({
      el: 'A',
      cssClass: 'btn btn_white',
      content: 'Remove Tick'
    });
    let spacer = $a0006f78bf10c69f$import$dce({
      el: 'DIV',
      cssStyle: 'width: 20px; min-width: 20px;'
    });
    let buttonInc = $a0006f78bf10c69f$import$dce({
      el: 'A',
      cssClass: 'btn type-redpoint',
      content: 'Tick'
    });

    let handleTick = add => {
      if ($a0006f78bf10c69f$import$globals.currentAscentGrade < 0) {
        return;
      }

      let grade = $a0006f78bf10c69f$import$globals.currentAscentGrade;
      let ascentType = $a0006f78bf10c69f$import$globals.currentAscentType;
      let ticks = $a0006f78bf10c69f$import$user.ticks;
      console.log($a0006f78bf10c69f$import$user);
      console.log(ticks); // Remove tick

      if (!add) {
        let ticksByGrade = [];

        for (let i = 0, j = ticks.length; i < j; i++) {
          let today = $a0006f78bf10c69f$import$globals.today.split("-");
          today = new Date(today[0], today[1], today[2]).getTime();

          if (ticks[i].date >= today && ticks[i].grade === grade && ticks[i].ascentType === ascentType && ticks[i].indoorsOutdoors === $a0006f78bf10c69f$import$globals.indoorsOutdoors && ticks[i].type === $a0006f78bf10c69f$import$globals.currentClimbingType) {
            ticksByGrade.push(i);
          }
        }

        if (ticksByGrade.length) {
          ticks.splice(ticksByGrade[ticksByGrade.length - 1], 1);
        }
      } else {
        // Add tick
        ticks.push({
          type: $a0006f78bf10c69f$import$globals.currentClimbingType,
          indoorsOutdoors: $a0006f78bf10c69f$import$globals.indoorsOutdoors,
          grade: grade,
          ascentType: ascentType,
          date: new Date().getTime(),
          uuid: $a0006f78bf10c69f$import$UUID(),
          location: false,
          synchronized: false
        });
      }

      let userFromStorage = $a0006f78bf10c69f$import$store.read({
        key: 'user'
      });
      console.log(userFromStorage);
      userFromStorage.ticks = ticks; // update local storage

      $a0006f78bf10c69f$import$store.write({
        key: 'user',
        keydata: userFromStorage
      });
      $a0006f78bf10c69f$import$globals.ticks = ticks;
    };

    buttonInc.addEventListener('click', () => {
      handleTick(true);
    }, false);
    buttonDec.addEventListener('click', () => {
      handleTick(false);
    }, false);
    buttonsContainer.append(buttonDec, spacer, buttonInc);
    pickerElement.appendChild(buttonsContainer);
    let naviShadow = $a0006f78bf10c69f$import$dce({
      el: 'DIV',
      cssClass: 'navi-shadow'
    });
    container.append(pickerElement, naviShadow);

    this.render = () => {
      return container;
    };
  }

}

$a0006f78bf10c69f$exports.default = $a0006f78bf10c69f$export$default;